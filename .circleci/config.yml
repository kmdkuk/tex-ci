version: 2
jobs:
  generate_cache:
    machine: true
    steps:
      - checkout
      - restore_cache:
          keys:
            - docker-alpine-texlive-ja
          paths: ~/caches/images.tar
      - run:
          name: Check cache file, if not exists then pull images and generate cache.
          command: |
            if [ ! -f ~/caches/images.tar ]; then
              docker pull paperist/alpine-texlive-ja
              mkdir -p ~/caches
              docker save paperist/alpine-texlive-ja:latest -o ~/caches/images.tar
            fi
      - save_cache:
          key: docker-alpine-texlive-ja
          paths: ~/caches/images.tar
  build:
    machine: true
    environment:
      TARGET: paper
    steps:
      - checkout
      - restore_cache:
          keys:
            - docker-alpine-texlive-ja
          paths: ~/caches/images.tar
      - run:
          name: Load Docker images
          command: docker load -i ~/caches/images.tar
      - run:
          name: build
          command: |
            docker run --rm -v `pwd':/root/project paperist/alpine-texlive-ja /bin/bash -c '\
              apk add --no-cache ca-certificates &&\
              cd /root/project &&\
              cp .latexmkrc ~/.latecmkrc &&\
              cd $TARGET && latexmk *.tex &&\
              cd ../ &&\
              mkdir artifacts &&\
              cp ${TARGET}/*.pdf artifacts/'
      - store_artifacts:
          path: artifacts

workflows:
  version: 2
  build:
    jobs:
      - generate_cache
      - build:
          requires:
            - generate_cache
